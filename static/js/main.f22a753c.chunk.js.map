{"version":3,"sources":["Clock.style.js","contexts/MainContext.js","contexts/ThemContext.js","components/header/Header.style.js","components/header/Header.js","components/timer/Timer.style.js","digital-alarm.wav","components/timer/Timer.js","Clock.js","GlobaleStyle.js","App.js","index.js"],"names":["ClockWrapper","styled","div","props","isLight","MainContext","createContext","MainContextProvider","useState","session","setSession","breakk","setbreakk","timer","setTimer","isRunning","setIsrunning","breakIsRunning","setBreakIsRunning","decrementTimer","playAlaram","document","getElementById","play","resetAlaram","audio","pause","currentTime","useEffect","countdown","setInterval","clearInterval","Provider","value","increment","id","num","decrement","rest","children","ThemeContext","ThemeContextProvider","setIsLight","toggleTheme","Wrapper","Flex","Title","h1","BreakSession","Length","Header","useContext","toMin","Math","floor","onClick","TimerWarapper","Display","Control","Timer","min","sec","toClock","src","alarm","className","Clock","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f22a753c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ClockWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nheight: 100vh;\r\nbackground: ${props => props.isLight ? 'var(--lightBackground)' : 'var(--darkBackground)'};\r\n`;","import React, { useState, createContext, useEffect } from 'react';\r\n\r\nexport const MainContext = createContext();\r\n\r\nconst MainContextProvider = props => {\r\n    \r\n    const [session, setSession] = useState(1500);\r\n    const [breakk , setbreakk] = useState(300);\r\n    const [timer, setTimer] = useState(1500);\r\n    const [isRunning, setIsrunning] = useState(false);\r\n    const [breakIsRunning, setBreakIsRunning] = useState(false);\r\n\r\n    const increment = (id, num) => {\r\n        if (id==='session') {\r\n            if( num  >=3600 ) {\r\n                return;\r\n            } else{\r\n                setSession(num+60);\r\n                setTimer(num+60)\r\n            }\r\n        } else {\r\n            if (num  >=3600) {\r\n                return;\r\n            } else {\r\n                setbreakk(num+60);\r\n            }\r\n        }\r\n    }\r\n\r\n    const decrement = (id, num) => {\r\n        if (id==='session') {\r\n            if( num  <= 60 ) {\r\n                return;\r\n            } else{\r\n                setSession(num-60);\r\n                setTimer(num-60)\r\n            }\r\n        } else {\r\n            if (num  <= 60) {\r\n                return;\r\n            } else {\r\n                setbreakk(num-60);\r\n            };\r\n        };\r\n    };\r\n    \r\n\r\n    const rest = () => {\r\n        setIsrunning(false);\r\n        setBreakIsRunning(false);\r\n        resetAlaram();\r\n        setSession(1500);\r\n        setbreakk(300);\r\n        setTimer(1500);\r\n\r\n    };\r\n\r\n    const decrementTimer = () => {\r\n        setIsrunning(!isRunning);\r\n    };\r\n\r\n    const playAlaram = () => {\r\n        const audio = document.getElementById('beep');\r\n        audio.play()\r\n    }\r\n    const resetAlaram = () => {\r\n        const audio = document.getElementById('beep');\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n    }\r\n\r\n    useEffect(() => {\r\n    if (isRunning && timer >0){\r\n        const countdown = setInterval(() => {\r\n            setTimer(timer-1)\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown)\r\n    } else if (isRunning && breakIsRunning  && timer === 0) {\r\n        setBreakIsRunning(!breakIsRunning);\r\n        setTimer(session);\r\n        playAlaram()\r\n    } else if (isRunning && !breakIsRunning && timer === 0) {\r\n        setBreakIsRunning(!breakIsRunning);\r\n        setTimer(breakk);\r\n        playAlaram();    \r\n    }\r\n    \r\n   }, [decrementTimer])\r\n\r\n\r\n    return ( \r\n        <MainContext.Provider value={{session, breakk, timer, breakIsRunning, increment, decrement, rest, decrementTimer}}>\r\n            {props.children}\r\n        </MainContext.Provider>\r\n     );\r\n}\r\n \r\nexport default MainContextProvider;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\r\n    const [isLight, setIsLight] = useState(true)\r\n    \r\n    const toggleTheme = () => {\r\n        setIsLight(!isLight)\r\n    }\r\n\r\n\r\n    return ( \r\n        <ThemeContext.Provider value= {{isLight, toggleTheme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ThemeContextProvider;\r\n","import styled, {css} from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nmin-width: 40%;\r\nmin-height: 40%;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content:center;\r\nmargin: 0 auto;\r\n\r\n`;\r\n\r\nexport const Flex = styled.div`\r\ndisplay: flex;\r\njustify-content: space-around;\r\n@media only screen and (max-width: 700px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n`;\r\n\r\nexport const Title = styled.h1`\r\nmargin: 0 auto;\r\nheight: 20%;\r\n`;\r\n\r\nexport const BreakSession = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nh2 {\r\n    color: ${props => props.isLight ? 'var(--buttonLight)' : 'var(--textDark)' };\r\n}\r\n`;\r\n\r\n\r\nexport const Length = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n* {\r\n    margin: 6px 0;\r\n}\r\nbutton {\r\n    padding: 4px;\r\n    border:1px solide black;\r\n    margin:2px;\r\n    font-size:20px;\r\n    background: ${props => props.isLight ? 'var(--timerLight)' : 'var(--timerDark)'};\r\n    color: ${props => props.isLight ? 'var(--buttonLight)' : 'var(--textDark)' };\r\n\r\n}\r\np {\r\n    font-size: 20px;\r\n    margin: 6px 2px;  \r\n}\r\n`;","import React, { useContext, useRef } from 'react';\r\nimport { MainContext } from '../../contexts/MainContext';\r\nimport { ThemeContext } from '../../contexts/ThemContext';\r\nimport { Length, Flex, Title, Wrapper, BreakSession } from './Header.style';\r\n const Header = () => {\r\n     \r\n    \r\n    const {session, increment, decrement, breakk} = useContext(MainContext);\r\n    const {isLight} =  useContext(ThemeContext);\r\n    \r\n    const toMin = num => {\r\n        return Math.floor(num/60);\r\n    }\r\n\r\n     return ( \r\n         <Wrapper >\r\n             <Title>25 + 5 clock</Title>\r\n             <Flex>\r\n                 <BreakSession isLight={isLight}>\r\n                     <h2 id='break-label'>Break Length</h2>\r\n                     <Length isLight={isLight}>\r\n                        <button onClick={() => decrement('break', breakk)} id='break-decrement'>-</button>\r\n                        <p id='break-length'>{toMin(breakk)}</p>\r\n                        <button onClick={() => increment('break',breakk)} id='break-increment'>+</button>\r\n                     </Length>\r\n                 </BreakSession>\r\n                 <BreakSession isLight={isLight}>\r\n                     <h2 id='session-label'>Session Length</h2>\r\n                     <Length isLight={isLight}>\r\n                     <button id='session-decrement' onClick={() => decrement('session',session)}>-</button>\r\n                     <p id='session-length'>{toMin(session)}</p>\r\n                     <button onClick={() =>increment('session',session)}  id='session-increment'>+</button>\r\n                     </Length>\r\n                 </BreakSession>\r\n             </Flex>\r\n         </Wrapper>\r\n      );\r\n }\r\n  \r\n export default Header;","import styled from \"styled-components\";\r\n\r\nexport const TimerWarapper = styled.div`\r\nmin-width: 300px;\r\nmin-height: 30%;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nalign-items: center;\r\nmargin: 0 auto;\r\npadding: 1em;\r\n`\r\n\r\nexport const Display = styled.div`\r\nwidth: 100%;\r\nmin-height: 70%;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nborder: 5px ${props => props.isLight ? 'var(--timerLight)' : 'var(--textDark)' } solid;\r\nborder-radius: 30%;\r\nalign-items: center;\r\n p {\r\n     font-size: 60px;\r\n     font-weight: 20px;\r\n     color: ${props => props.isLight ? 'var(--buttonLight)' : 'var(--textDark)' };\r\n }\r\n`;\r\n\r\nexport const Control = styled.div`\r\nmin-width: 10%;\r\nmargin-top: 1em;\r\ndisplay: flex;\r\njustify-content: space-between;\r\n\r\nbutton {\r\n    padding: 10px;\r\n    background: ${props => props.isLight ? 'var(--timerLight)' : 'var(--timerDark)'};\r\n    color: ${props => props.isLight ? 'var(--buttonLight)' : 'var(--textDark)' };\r\n   \r\n\r\n}\r\n`;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/digital-alarm.7ba9fbe4.wav\";","import React, {useContext} from 'react';\r\nimport { MainContext } from '../../contexts/MainContext';\r\nimport { Control, Display, TimerWarapper } from './Timer.style';\r\nimport alarm from '../../digital-alarm.wav'\r\nimport { ThemeContext } from '../../contexts/ThemContext';\r\n\r\n\r\nconst Timer = () => {\r\n\r\n    const {rest, timer, decrementTimer, breakIsRunning} = useContext(MainContext);\r\n    const {isLight, toggleTheme} = useContext(ThemeContext)\r\n    \r\n\r\n    const toClock = (num) => {\r\n        let min = Math.floor(num/60);\r\n        let sec =  num%60;\r\n        min = min<10 ? '0'+ min : min;\r\n        sec = sec<10 ? '0'+ sec : sec; \r\n        return `${min}:${sec}`\r\n    }\r\n\r\n\r\n    return ( \r\n        <TimerWarapper>\r\n            <Display isLight={isLight}>\r\n                {breakIsRunning && <h2 id='timer-label'>Break</h2>}\r\n                {!breakIsRunning && <h2 id='timer-label'>Session</h2>}\r\n                <p id='time-left'>{toClock(timer)}</p>\r\n                <audio id='beep' src={alarm} ></audio>\r\n            </Display>\r\n            <Control isLight={isLight}>\r\n                <button onClick={decrementTimer} id='start_stop'><i className=\"far fa-play-circle\"></i></button>\r\n                <button onClick={rest} id='reset'><i className=\"fas fa-redo-alt\"></i></button>\r\n                <button onClick={toggleTheme}>Toggle Them</button>\r\n            </Control>\r\n        </TimerWarapper>\r\n     );\r\n}\r\n \r\nexport default Timer;\r\n","import React, { useContext }  from 'react';\r\nimport { ClockWrapper } from './Clock.style';\r\nimport Header from \"./components/header/Header\";\r\nimport Timer from \"./components/timer/Timer\";\r\nimport { ThemeContext } from './contexts/ThemContext';\r\n\r\n\r\nconst Clock = () => {\r\n    const {isLight} =  useContext(ThemeContext);\r\n    return ( \r\n        <ClockWrapper isLight={isLight}>\r\n            <Header />\r\n            <Timer />\r\n        </ClockWrapper>\r\n     );\r\n}\r\n \r\nexport default Clock;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root {\r\n    --lightBackground: #CAFAFE;\r\n    --darkBackground: #5D5C61;\r\n    --timerLight: #3FEEE6;\r\n    --timerDark: #379683;\r\n    --buttonLight: #FC4445;\r\n    --buttonDark: #557A95;\r\n    --textLight: black;\r\n    --textDark: white;\r\n\r\n}\r\n* {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\nbody {\r\n    width: 100%;\r\n    min-height: 100vh;\r\n   \r\n}\r\n`;","import Clock from \"./Clock\";\nimport MainContextProvider from \"./contexts/MainContext\";\nimport ThemeContextProvider, { ThemeContext } from \"./contexts/ThemContext\";\nimport { GlobalStyle } from \"./GlobaleStyle\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <GlobalStyle />\n    <ThemeContextProvider>\n    <MainContextProvider>\n      <Clock />\n    </MainContextProvider>\n    </ThemeContextProvider> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}